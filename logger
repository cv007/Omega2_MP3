#!/bin/sh

mpg123_info() {
    [ "${str:0:1}" == "@" ] || return
    case "$str" in
        *StreamTitle*)
            #...StreamTitle='song title here';..... -we want only the title,
            #remove up to song title via empty substitute
            str="${str/*StreamTitle=\'/}"
            #remove after title (will be left with just the title)
            str="${str/\';*/}"
            #empty string, just return
            [ "$str" ] || return
            #duplicates of last title
            [ "$last_str" == "$str" ] && unset str && return
            #title contains 'YourClassical.org'
            [ -z "${str##*YourClassical.org*}" ] && unset str && return
            #save for next time (check duplicates)
            last_str="$str"
            #add '@ ' so we know log source is mpg123
            str="@ $str"
            ;;
        "@P 0") str="@ stopped" ;;
        "@P 1") str="@ paused"  ;;
        "@P 2") str="@ play"    ;;
        *)
            unset str
        ;;
    esac
}


#if passed a logfile name, use it, else set ourselves
[ "$1" ] && logfile="$1" || logfile=log.txt
#try to append to log, if fails use our own log file
>>"$logfile" || logfile=log.txt


#stay in logging loop until QUITQUIT received (by mp3 script)
#input is from logfifo (mpg123 and mp3 script will send all messages to this script
#via the fifo)

while [ 1 -eq 1 ]; do
    read str <logfifo
    [ "$str" == "QUITQUIT" ] && break
    dat="$(date +%Y-%m-%d)"
    tim="$(date +%H:%M:%S)"
    mpg123_info
    [ "$str" ] && echo "[ $dat $tim ] $str" >> "$logfile"
done

#>$logfile
#just let mp3 delete logfile if needed

